/*! modern-normalize v1.0.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
*::before,
*::after {
	box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

:root {
	-moz-tab-size: 4;
	tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
	line-height: 1.15; /* 1 */
	-webkit-text-size-adjust: 100%; /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

/**
Add the correct font weight in Edge and Safari.
*/

strong {
	font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

/**
Add the correct font size in all browsers.
*/

small {
	font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
textarea {
	font-family: inherit; /* 1 */
	font-size: 100%; /* 1 */
	line-height: 1.15; /* 1 */
	margin: 0; /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button {
	/* 1 */
	text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type="button"] {
	-webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

/**
Restore the focus styles unset by the previous rule.
*/

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type="search"] {
	-webkit-appearance: textfield; /* 1 */
	outline-offset: -2px; /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

figure,
p {
	margin: 0;
}

button {
	background-color: transparent;
	background-image: none;
}

/**
 * Work around a Firefox/IE bug where the transparent `button` background
 * results in a loss of the default `button` focus styles.
 */

button:focus {
	outline: 1px dotted;
	outline: 5px auto -webkit-focus-ring-color;
}

ul {
	list-style: none;
	margin: 0;
	padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
	font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,
		"Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif,
		"Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
		"Noto Color Emoji"; /* 1 */
	line-height: 1.5; /* 2 */
}

/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
	box-sizing: border-box; /* 1 */
	border-width: 0; /* 2 */
	border-style: solid; /* 2 */
	border-color: #e4e4e7; /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
	border-style: solid;
}

textarea {
	resize: vertical;
}

input::placeholder,
textarea::placeholder {
	color: #a1a1aa;
}

button {
	cursor: pointer;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
	color: inherit;
	text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
textarea {
	padding: 0;
	line-height: inherit;
	color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

/**
 * Make replaced elements `display: block` by default as that's
 * the behavior you want almost all of the time. Inspired by
 * CSS Remedy, with `svg` added as well.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
svg {
	display: block;
	vertical-align: middle;
}

/**
 * Constrain images and videos to the parent width and preserve
 * their instrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img {
	max-width: 100%;
	height: auto;
}

.container {
	width: 100%;
}

@media (min-width: 640px) {
	.container {
		max-width: 640px;
	}
}

@media (min-width: 768px) {
	.container {
		max-width: 768px;
	}
}

@media (min-width: 1024px) {
	.container {
		max-width: 1024px;
	}
}

@media (min-width: 1280px) {
	.container {
		max-width: 1280px;
	}
}

@media (min-width: 1536px) {
	.container {
		max-width: 1536px;
	}
}

.page-padding {
	padding: 1.5rem;
}

@media (min-width: 768px) {
	.page-padding {
		padding: 3rem;
	}
}

@media (min-width: 1024px) {
	.page-padding {
		padding: 4rem;
	}
}

.gradient-title {
	background-image: linear-gradient(to right, var(--tw-gradient-stops));
	--tw-gradient-from: #6c63ff;
	--tw-gradient-stops: var(--tw-gradient-from),
		var(--tw-gradient-to, rgba(108, 99, 255, 0));
	--tw-gradient-to: #867eff;
	display: inline-block;
	font-weight: 700;
	font-size: 2.25rem;
	line-height: 2.5rem;
	background-clip: text;
	-webkit-text-fill-color: transparent;
}

.black-title {
	display: inline-block;
	font-weight: 700;
	font-size: 2.25rem;
	line-height: 2.5rem;
	color: black;
}

@media (min-width: 768px) {
	.gradient-title {
		font-size: 3rem;
		line-height: 1;
	}
}

.info-text {
	font-weight: 500;
	font-size: 1.5rem;
	line-height: 2rem;
	line-height: 1.625;
	text-align: justify;
	--tw-text-opacity: 1;
	color: rgba(63, 63, 70, var(--tw-text-opacity));
}

.disclaimer-text {
	text-align: justify;
	color: rgba(63, 63, 70, var(--tw-text-opacity));
}

@media (min-width: 768px) {
	.info-text {
		font-size: 1.5rem;
		line-height: 2rem;
	}
}

.space-y-2 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
	margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.space-y-4 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
	margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.space-x-8 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-x-reverse: 0;
	margin-right: calc(2rem * var(--tw-space-x-reverse));
	margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-12 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-top: calc(3rem * calc(1 - var(--tw-space-y-reverse)));
	margin-bottom: calc(3rem * var(--tw-space-y-reverse));
}

.space-y-24 > :not([hidden]) ~ :not([hidden]) {
	--tw-space-y-reverse: 0;
	margin-top: calc(6rem * calc(1 - var(--tw-space-y-reverse)));
	margin-bottom: calc(6rem * var(--tw-space-y-reverse));
}

.bg-transparent {
	background-color: transparent;
}

.bg-white {
	--tw-bg-opacity: 1;
	background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}

.bg-gray-100 {
	--tw-bg-opacity: 1;
	background-color: rgba(244, 244, 245, var(--tw-bg-opacity));
}

.bg-gray-200 {
	--tw-bg-opacity: 1;
	background-color: rgba(228, 228, 231, var(--tw-bg-opacity));
}

.bg-gray-700 {
	--tw-bg-opacity: 1;
	background-color: rgba(63, 63, 70, var(--tw-bg-opacity));
}

.bg-ks-purple {
	--tw-bg-opacity: 1;
	background-color: rgba(108, 99, 255, var(--tw-bg-opacity));
}

.bg-ks-light-purple {
	--tw-bg-opacity: 1;
	background-color: rgba(229, 230, 248, var(--tw-bg-opacity));
}

.bg-gradient-to-r {
	background-image: linear-gradient(to right, var(--tw-gradient-stops));
}

.bg-gradient-to-br {
	background-image: linear-gradient(
		to bottom right,
		var(--tw-gradient-stops)
	);
}

.from-indigo-900 {
	--tw-gradient-from: #312e81;
	--tw-gradient-stops: var(--tw-gradient-from),
		var(--tw-gradient-to, rgba(49, 46, 129, 0));
}

.from-ks-purple {
	--tw-gradient-from: #6c63ff;
	--tw-gradient-stops: var(--tw-gradient-from),
		var(--tw-gradient-to, rgba(108, 99, 255, 0));
}

.to-ks-gradient-purple {
	--tw-gradient-to: #867eff;
}

.to-ks-dark-purple {
	--tw-gradient-to: #0e122f;
}

.border-transparent {
	border-color: transparent;
}

.rounded {
	border-radius: 0.25rem;
}

.rounded-lg {
	border-radius: 0.5rem;
}

.rounded-xl {
	border-radius: 0.75rem;
}

.rounded-3xl {
	border-radius: 1.5rem;
}

.rounded-full {
	border-radius: 9999px;
}

.rounded-t-xl {
	border-top-left-radius: 0.75rem;
	border-top-right-radius: 0.75rem;
}

.border-solid {
	border-style: solid;
}

.border {
	border-width: 1px;
}

.cursor-pointer {
	cursor: pointer;
}

.block {
	display: block;
}

.inline-block {
	display: inline-block;
}

.inline {
	display: inline;
}

.flex {
	display: flex;
}

.grid {
	display: grid;
}

.hidden {
	display: none;
}

.flex-row {
	flex-direction: row;
}

.flex-col {
	flex-direction: column;
}

.flex-wrap {
	flex-wrap: wrap;
}

.items-center {
	align-items: center;
}

.justify-center {
	justify-content: center;
}

.justify-between {
	justify-content: space-between;
}

.justify-evenly {
	justify-content: space-evenly;
}

.flex-grow {
	flex-grow: 1;
}

.font-medium {
	font-weight: 500;
}

.font-semibold {
	font-weight: 600;
}

.font-bold {
	font-weight: 700;
}

.h-1 {
	height: 0.25rem;
}

.h-6 {
	height: 1.5rem;
}

.h-24 {
	height: 6rem;
}

.h-36 {
	height: 9rem;
}

.h-44 {
	height: 11rem;
}

.h-72 {
	height: 18rem;
}

.h-80 {
	height: 20rem;
}

.h-96 {
	height: 24rem;
}

.h-auto {
	height: auto;
}

.h-screen {
	height: 100vh;
}

.text-sm {
	font-size: 0.875rem;
	line-height: 1.25rem;
}

.text-lg {
	font-size: 1.125rem;
	line-height: 1.75rem;
}

.text-xl {
	font-size: 1.25rem;
	line-height: 1.75rem;
}

.text-2xl {
	font-size: 1.5rem;
	line-height: 2rem;
}

.text-3xl {
	font-size: 1.875rem;
	line-height: 2.25rem;
}

.text-4xl {
	font-size: 2.25rem;
	line-height: 2.5rem;
}

.text-5xl {
	font-size: 3rem;
	line-height: 1;
}

.text-6xl {
	font-size: 3.75rem;
	line-height: 1;
}

.leading-none {
	line-height: 1;
}

.leading-snug {
	line-height: 1.375;
}

.leading-relaxed {
	line-height: 1.625;
}

.list-none {
	list-style-type: none;
}

.m-4 {
	margin: 1rem;
}

.mx-auto {
	margin-left: auto;
	margin-right: auto;
}

.mt-2 {
	margin-top: 0.5rem;
}

.mt-4 {
	margin-top: 1rem;
}

.mb-4 {
	margin-bottom: 1rem;
}

.mt-6 {
	margin-top: 1.5rem;
}

.mb-6 {
	margin-bottom: 1.5rem;
}

.mt-8 {
	margin-top: 2rem;
}

.mb-8 {
	margin-bottom: 2rem;
}

.mt-12 {
	margin-top: 3rem;
}

.mt-14 {
	margin-top: 3.5rem;
}

.mb-20 {
	margin-bottom: 5rem;
}

.max-h-96 {
	max-height: 24rem;
}

.max-h-full {
	max-height: 100%;
}

.max-w-full {
	max-width: 100%;
}

.min-h-full {
	min-height: 100%;
}

.min-w-full {
	min-width: 100%;
}

.object-cover {
	object-fit: cover;
}

.hover\:opacity-75:hover {
	opacity: 0.75;
}

.outline-none {
	outline: 2px solid transparent;
	outline-offset: 2px;
}

.focus\:outline-none:focus {
	outline: 2px solid transparent;
	outline-offset: 2px;
}

.overflow-auto {
	overflow: auto;
}

.p-2 {
	padding: 0.5rem;
}

.p-3 {
	padding: 0.75rem;
}

.p-4 {
	padding: 1rem;
}

.p-5 {
	padding: 1.25rem;
}

.p-6 {
	padding: 1.5rem;
}

.p-8 {
	padding: 2rem;
}

.p-24 {
	padding: 6rem;
}

.py-1 {
	padding-top: 0.25rem;
	padding-bottom: 0.25rem;
}

.px-1 {
	padding-left: 0.25rem;
	padding-right: 0.25rem;
}

.py-2 {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
}

.px-2 {
	padding-left: 0.5rem;
	padding-right: 0.5rem;
}

.px-3 {
	padding-left: 0.75rem;
	padding-right: 0.75rem;
}

.py-4 {
	padding-top: 1rem;
	padding-bottom: 1rem;
}

.px-4 {
	padding-left: 1rem;
	padding-right: 1rem;
}

.py-16 {
	padding-top: 4rem;
	padding-bottom: 4rem;
}

.pl-1 {
	padding-left: 0.25rem;
}

.pt-6 {
	padding-top: 1.5rem;
}

.pointer-events-none {
	pointer-events: none;
}

.absolute {
	position: absolute;
}

.relative {
	position: relative;
}

.top-0 {
	top: 0px;
}

* {
	--tw-shadow: 0 0 #0000;
}

.shadow-md {
	--tw-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
		0 2px 4px -1px rgba(0, 0, 0, 0.06);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg {
	--tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
		0 4px 6px -2px rgba(0, 0, 0, 0.05);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-xl {
	--tw-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
		0 10px 10px -5px rgba(0, 0, 0, 0.04);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:shadow-xl:hover {
	--tw-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
		0 10px 10px -5px rgba(0, 0, 0, 0.04);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.focus\:shadow-lg:focus {
	--tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
		0 4px 6px -2px rgba(0, 0, 0, 0.05);
	box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
		var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

* {
	--tw-ring-inset: var(--tw-empty, /*!*/ /*!*/);
	--tw-ring-offset-width: 0px;
	--tw-ring-offset-color: #fff;
	--tw-ring-color: rgba(59, 130, 246, 0.5);
	--tw-ring-offset-shadow: 0 0 #0000;
	--tw-ring-shadow: 0 0 #0000;
}

.ring-4 {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
		var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0
		calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
		var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-2:focus {
	--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
		var(--tw-ring-offset-width) var(--tw-ring-offset-color);
	--tw-ring-shadow: var(--tw-ring-inset) 0 0 0
		calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
	box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
		var(--tw-shadow, 0 0 #0000);
}

.ring-offset-4 {
	--tw-ring-offset-width: 4px;
}

.ring-ks-purple {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgba(108, 99, 255, var(--tw-ring-opacity));
}

.focus\:ring-ks-purple:focus {
	--tw-ring-opacity: 1;
	--tw-ring-color: rgba(108, 99, 255, var(--tw-ring-opacity));
}

.text-center {
	text-align: center;
}

.text-black {
	--tw-text-opacity: 1;
	color: rgba(0, 0, 0, var(--tw-text-opacity));
}

.text-white {
	--tw-text-opacity: 1;
	color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.text-gray-200 {
	--tw-text-opacity: 1;
	color: rgba(228, 228, 231, var(--tw-text-opacity));
}

.text-gray-500 {
	--tw-text-opacity: 1;
	color: rgba(113, 113, 122, var(--tw-text-opacity));
}

.text-gray-600 {
	--tw-text-opacity: 1;
	color: rgba(82, 82, 91, var(--tw-text-opacity));
}

.text-gray-700 {
	--tw-text-opacity: 1;
	color: rgba(63, 63, 70, var(--tw-text-opacity));
}

.text-ks-purple {
	--tw-text-opacity: 1;
	color: rgba(108, 99, 255, var(--tw-text-opacity));
}

.text-ks-green {
	--tw-text-opacity: 1;
	color: rgba(34, 172, 152, var(--tw-text-opacity));
}

.hover\:text-ks-orange:hover {
	--tw-text-opacity: 1;
	color: rgba(229, 103, 47, var(--tw-text-opacity));
}

.uppercase {
	text-transform: uppercase;
}

.no-underline {
	text-decoration: none;
}

.hover\:underline:hover {
	text-decoration: underline;
}

.break-words {
	overflow-wrap: break-word;
}

.w-6 {
	width: 1.5rem;
}

.w-36 {
	width: 9rem;
}

.w-64 {
	width: 16rem;
}

.w-full {
	width: 100%;
}

.z-50 {
	z-index: 50;
}

.gap-8 {
	gap: 2rem;
}

.grid-cols-1 {
	grid-template-columns: repeat(1, minmax(0, 1fr));
}

.transform {
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	transform: translateX(var(--tw-translate-x))
		translateY(var(--tw-translate-y)) rotate(var(--tw-rotate))
		skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform-gpu {
	--tw-translate-x: 0;
	--tw-translate-y: 0;
	--tw-rotate: 0;
	--tw-skew-x: 0;
	--tw-skew-y: 0;
	--tw-scale-x: 1;
	--tw-scale-y: 1;
	transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0)
		rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
		scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.origin-left {
	transform-origin: left;
}

.scale-x-0 {
	--tw-scale-x: 0;
}

.group:hover .group-hover\:scale-x-100 {
	--tw-scale-x: 1;
}

.rotate-2 {
	--tw-rotate: 2deg;
}

.transition {
	transition-property: background-color, border-color, color, fill, stroke,
		opacity, box-shadow, transform;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}

.transition-transform {
	transition-property: transform;
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
	transition-duration: 150ms;
}

.duration-200 {
	transition-duration: 200ms;
}

@keyframes spin {
	to {
		transform: rotate(360deg);
	}
}

@keyframes ping {
	75%,
	100% {
		transform: scale(2);
		opacity: 0;
	}
}

@keyframes pulse {
	50% {
		opacity: 0.5;
	}
}

@keyframes bounce {
	0%,
	100% {
		transform: translateY(-25%);
		animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
	}

	50% {
		transform: none;
		animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
	}
}

.player-wrapper {
	position: relative;
	padding-top: 56.25%; /* Player ratio: 100 / (1280 / 720) */
}

.react-player {
	position: absolute;
	top: 0;
	left: 0;
}

@media (min-width: 768px) {
	.md\:flex-row {
		flex-direction: row;
	}

	.md\:items-start {
		align-items: flex-start;
	}

	.md\:justify-between {
		justify-content: space-between;
	}

	.md\:h-96 {
		height: 24rem;
	}

	.md\:text-7xl {
		font-size: 4.5rem;
		line-height: 1;
	}

	.md\:mt-0 {
		margin-top: 0px;
	}

	.md\:mb-0 {
		margin-bottom: 0px;
	}

	.md\:p-4 {
		padding: 1rem;
	}

	.md\:p-6 {
		padding: 1.5rem;
	}

	.md\:px-24 {
		padding-left: 6rem;
		padding-right: 6rem;
	}

	.md\:px-32 {
		padding-left: 8rem;
		padding-right: 8rem;
	}

	.md\:text-left {
		text-align: left;
	}

	.md\:w-4\/12 {
		width: 33.333333%;
	}

	.md\:grid-cols-2 {
		grid-template-columns: repeat(2, minmax(0, 1fr));
	}
}

@media (min-width: 1024px) {
	.lg\:block {
		display: block;
	}

	.lg\:flex {
		display: flex;
	}

	.lg\:hidden {
		display: none;
	}

	.lg\:flex-row {
		flex-direction: row;
	}

	.lg\:justify-start {
		justify-content: flex-start;
	}

	.lg\:text-6xl {
		font-size: 3.75rem;
		line-height: 1;
	}

	.lg\:text-8xl {
		font-size: 6rem;
		line-height: 1;
	}

	.lg\:ml-auto {
		margin-left: auto;
	}

	.lg\:px-36 {
		padding-left: 9rem;
		padding-right: 9rem;
	}

	.lg\:px-64 {
		padding-left: 16rem;
		padding-right: 16rem;
	}

	.lg\:static {
		position: static;
	}

	.lg\:w-auto {
		width: auto;
	}
}

@media (min-width: 1536px) {
	.\32xl\:text-8xl {
		font-size: 6rem;
		line-height: 1;
	}
}
